name: Pull Request General

on:
  pull_request:
  merge_group:

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.71.0

jobs:
  run_tests:
    name: Run Cargo Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          submodules: recursive

      - uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          key: test

      - run: cargo test

  run_rustfmt:
    name: Run Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt
      - run: cargo fmt --all -- --check

  run_rustdoc:
    name: Run RustDoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          submodules: recursive

      - uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          key: doc

      - run: cargo doc --document-private-items

  run_clippy:
    name: Run Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          submodules: recursive

      - uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          key: clippy

      - name: Run clippy action to produce annotations
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: giraffate/clippy-action@94e9bd8deab2618756ec5380f12eb35bcb0a88ca
        if: env.GITHUB_TOKEN != null
        with:
          clippy_flags: --all-targets -- -D warnings
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: "github-pr-check"

      - name: Run clippy manually without annotations
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.GITHUB_TOKEN == null
        run: cargo clippy --all-targets -- -D warnings

  run_cargodeny:
    name: Run Cargo Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          submodules: recursive
      - uses: EmbarkStudios/cargo-deny-action@3f4a782664881cf5725d0ffd23969fcce89fd868 # v1.6.3
        with:
          command: check ${{ matrix.checks }}

  tests_passed:
    name: All tests passed
    needs:
      - run_cargodeny
      - run_clippy
      - run_rustfmt
      - run_rustdoc
      - run_tests
    runs-on: ubuntu-latest
    steps:
      - name: log
        run: echo All tests have passed!
